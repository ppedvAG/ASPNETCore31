// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Customer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AdvancedGrpcService.Protos {
  public static partial class Customer
  {
    static readonly string __ServiceName = "Customer";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AdvancedGrpcService.Protos.CustomerModel> __Marshaller_CustomerModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AdvancedGrpcService.Protos.CustomerModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AdvancedGrpcService.Protos.CustomerRequest> __Marshaller_CustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AdvancedGrpcService.Protos.CustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AdvancedGrpcService.Protos.NewCustomerModel> __Marshaller_NewCustomerModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AdvancedGrpcService.Protos.NewCustomerModel.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AdvancedGrpcService.Protos.CustomerModel> __Method_GetAllCustomer = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AdvancedGrpcService.Protos.CustomerModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllCustomer",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_CustomerModel);

    static readonly grpc::Method<global::AdvancedGrpcService.Protos.CustomerRequest, global::AdvancedGrpcService.Protos.CustomerModel> __Method_GetCustomer = new grpc::Method<global::AdvancedGrpcService.Protos.CustomerRequest, global::AdvancedGrpcService.Protos.CustomerModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomer",
        __Marshaller_CustomerRequest,
        __Marshaller_CustomerModel);

    static readonly grpc::Method<global::AdvancedGrpcService.Protos.NewCustomerModel, global::Google.Protobuf.WellKnownTypes.Empty> __Method_WriteCustomer = new grpc::Method<global::AdvancedGrpcService.Protos.NewCustomerModel, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WriteCustomer",
        __Marshaller_NewCustomerModel,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AdvancedGrpcService.Protos.CustomerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Customer</summary>
    [grpc::BindServiceMethod(typeof(Customer), "BindService")]
    public abstract partial class CustomerBase
    {
      /// <summary>
      ///List&lt;CustomerModel> GetAllCustomer();
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task GetAllCustomer(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::AdvancedGrpcService.Protos.CustomerModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///CustomerModel GetCustomer (int id);
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AdvancedGrpcService.Protos.CustomerModel> GetCustomer(global::AdvancedGrpcService.Protos.CustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// void WriteCustomer(CustomerModel model);
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> WriteCustomer(global::AdvancedGrpcService.Protos.NewCustomerModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CustomerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllCustomer, serviceImpl.GetAllCustomer)
          .AddMethod(__Method_GetCustomer, serviceImpl.GetCustomer)
          .AddMethod(__Method_WriteCustomer, serviceImpl.WriteCustomer).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CustomerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllCustomer, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::AdvancedGrpcService.Protos.CustomerModel>(serviceImpl.GetAllCustomer));
      serviceBinder.AddMethod(__Method_GetCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdvancedGrpcService.Protos.CustomerRequest, global::AdvancedGrpcService.Protos.CustomerModel>(serviceImpl.GetCustomer));
      serviceBinder.AddMethod(__Method_WriteCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdvancedGrpcService.Protos.NewCustomerModel, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.WriteCustomer));
    }

  }
}
#endregion
